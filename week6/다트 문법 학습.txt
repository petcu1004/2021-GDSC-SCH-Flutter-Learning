- 플러터 Dart(다트) 문법 정리
- var와 dynamic
- 타입 캐스팅과 num
- final과 const
- 함수 선언
- 클래스
- null safety
- 비동기 처리(Future, async, await) + FutureBuilder

String name="루피";
var friend = '조로'; //타입 추론

var friend = '조로';
friend = 23;// Error: Compilation failed.

void main() {
  dynamic friend = '상디'; //동적으로 타입이 변경 가능
  friend = 102;
  print(friend);
}

num 타입의 경우, 데이터를 구분 없이 받을 때 사용한다.
int와 double 같은 경우 상위 타입인 num으로 선언 가능하다.

// funal로 정의한 값은 런타임에서 정의된 값을 설정할 수 있다.
final c = DateTime.now();

// const로 정의한 값은 런타임에서 정의된 값을 설정할 수 없다.
const d = DateTime.now(); // Error: Compilation failed.

함수 선언 : 함수명 (매개변수){ retrun 반환 값; }
클래스 선언 : class 클래스명{멤버 변수, 멤버 함수 }

null safety란 null에게서 안전한 프로그램 코드를 작성하는 것을 의미한다.
쉽게 생각해서 코드가 실행되면서 예상치 못한 null을 대응하는 것이라고 생각하면 될 것 같다.
Dart 언어의 변수는 기본적으로 non- nullable로 선언되는 것이며
만약 nullable로 선언하고자 한다면 타입명 뒤에 ? 를 작성해주면 된다.

비동기 처리 
(Future, async, await)
FutureBuilder는 대부분 앨범에서 이미지 가져오기, 현재 배터리 표시, 파일 가져오기, http 요청 등 일회성 응답에 사용한다.